# Reference: https://build-cpp.github.io/cmkr/cmake-toml
[project]
name = "safetyhook"

[options]
SAFETYHOOK_BUILD_DOCS = false
SAFETYHOOK_BUILD_TESTS = false
SAFETYHOOK_BUNDLE_ZYDIS = true

[conditions]
build-docs = "SAFETYHOOK_BUILD_DOCS"
build-tests = "SAFETYHOOK_BUILD_TESTS"
bundle-zydis = "SAFETYHOOK_BUNDLE_ZYDIS"

[fetch-content.Catch2]
condition = "build-tests"
git = "https://github.com/catchorg/Catch2.git"
tag = "v3.3.2"
shallow = true

[find-package.Doxygen]
condition = "build-docs"
required = true

[target.Zydis]
condition = "bundle-zydis"
type = "static"
sources = ["src/Zydis.c"]
include-directories = ["include/"]
compile-definitions = ["ZYDIS_STATIC_BUILD"]

[target.safetyhook]
type = "static"
sources = ["src/*.cpp"]
include-directories = ["include/"]
compile-features = ["cxx_std_23"]
compile-definitions = ["NOMINMAX"]
alias = "safetyhook::safetyhook"
link-libraries = ["Zydis", "ntdll"]
msvc.private-compile-options = ["/permissive-", "/W4", "/w14640"]
clang.private-compile-options = ["-Wall", "-Wextra", "-Wshadow", "-Wnon-virtual-dtor", "-pedantic"]
gcc.private-compile-options = ["-Wall", "-Wextra", "-Wshadow", "-Wnon-virtual-dtor", "-pedantic"]

[target.docs]
condition = "build-docs"
type = "custom"
cmake-before = """
get_target_property(HEADER_DIR safetyhook INTERFACE_INCLUDE_DIRECTORIES)
file(GLOB_RECURSE HEADER_FILES ${HEADER_DIR}/*.hpp)
set(DOXYGEN_INDEX_FILE ${CMAKE_CURRENT_SOURCE_DIR}/docs/html/index.html)
set(DOXYFILE_IN ${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxyfile.in)
set(DOXYFILE_OUT ${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxyfile)
configure_file(${DOXYFILE_IN} ${DOXYFILE_OUT})
add_custom_command(
    OUTPUT ${DOXYGEN_INDEX_FILE}
    DEPENDS ${HEADER_FILES}
    COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE_OUT}
    MAIN_DEPENDENCY ${DOXYFILE_OUT} ${DOXYFILE_IN}
    COMMENT "Generating docs"
)
add_custom_target(Doxygen ALL DEPENDS ${DOXYGEN_INDEX_FILE})
"""


[target.test0]
condition = "build-tests"
type = "executable"
sources = ["tests/test0.cpp"]
link-libraries = ["safetyhook::safetyhook"]

[target.test1]
condition = "build-tests"
type = "executable"
sources = ["tests/test1.cpp"]
link-libraries = ["safetyhook::safetyhook"]

[target.test2]
condition = "build-tests"
type = "executable"
sources = ["tests/test2.cpp"]
link-libraries = ["safetyhook::safetyhook"]

[target.test3]
condition = "build-tests"
type = "executable"
sources = ["tests/test3.cpp"]
link-libraries = ["safetyhook::safetyhook"]

[target.unittest]
condition = "build-tests"
type = "executable"
sources = ["unittest/*.cpp"]
link-libraries = ["Catch2::Catch2WithMain", "safetyhook::safetyhook"]